version: 2.1

orbs:
  win: circleci/windows@1.0.0

jobs:
  build:
    executor:
      name: win/vs2019
      shell: powershell.exe
    steps:
      - run:
          name: install msys2
          command: |
            # install msys2.
            choco install --no-progress -y msys2

            # configure the msys2 launcher to let the shell inherith the PATH.
            $msys2BasePath = 'C:\tools\msys64'
            $msys2ConfigPath = "$msys2BasePath\msys2.ini"
            [IO.File]::WriteAllText(
                $msys2ConfigPath,
                ([IO.File]::ReadAllText($msys2ConfigPath) `
                    -replace '#?(MSYS2_PATH_TYPE=).+','$1inherit')
            )

            # define a function for easying the execution of bash scripts.
            $bashPath = "$msys2BasePath\usr\bin\bash.exe"
            function Bash($script) {
                $eap = $ErrorActionPreference
                $ErrorActionPreference = 'Continue'
                try {
                    # we also redirect the stderr to stdout because PowerShell
                    # oddly interleaves them.
                    # see https://www.gnu.org/software/bash/manual/bash.html#The-Set-Builtin
                    echo 'exec 2>&1;set -eu;export PATH="/usr/bin:$PATH";export HOME=$USERPROFILE;' $script | &$bashPath
                    if ($LASTEXITCODE) {
                        throw "bash execution failed with exit code $LASTEXITCODE"
                    }
                } finally {
                    $ErrorActionPreference = $eap
                }
            }
            
            # install dependencies.
            Bash 'pacman --noconfirm -Sy xorriso'
      - run:
          name: use msys2
          command: |
            # define a function for easying the execution of bash scripts.
            $bashPath = "C:\tools\msys64\usr\bin\bash.exe"
            function Bash($script) {
                $eap = $ErrorActionPreference
                $ErrorActionPreference = 'Continue'
                try {
                    # we also redirect the stderr to stdout because PowerShell
                    # oddly interleaves them.
                    # see https://www.gnu.org/software/bash/manual/bash.html#The-Set-Builtin
                    echo 'exec 2>&1;set -eu;export PATH="/usr/bin:$PATH";export HOME=$USERPROFILE;' $script | &$bashPath
                    if ($LASTEXITCODE) {
                        throw "bash execution failed with exit code $LASTEXITCODE"
                    }
                } finally {
                    $ErrorActionPreference = $eap
                }
            }
            
            Bash @'
            set -euxo pipefail
            env | sort
            pacman --version
            xorriso --version
            '@
